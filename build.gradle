/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */



apply plugin: 'java'
apply plugin: 'application'

repositories {
    jcenter()
    mavenCentral()
}

jar{
    baseName = "logHecate"
    manifest {
        attributes(
                'Main-Class': 'App'
        )
    }

    from{
        configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
    }
}

dependencies {

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

}

def logPath(){

    boolean isWindows
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        isWindows = true
    } else {
        isWindows = false
    }

    String path
    if (isWindows){
        path = "C:\\temp\\test.txt"
    }
    else {
        path = "/Users/kobbigal/dev/dir_for_testing/text1.txt"
    }

    return path
}

def printOS() {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        println "OS detected: Windows"
    } else {
        println "OS detected: UNIX"
    }
}

task writeToLogFile(){

    printOS()

    doLast {
        int numberOfBatches = 10
        int numberOfLinesToWrite = 50
        int secondsToSleep = 5

        for (int i = 1; i <=numberOfBatches; i++) {

            for (int j = 1; j <= numberOfLinesToWrite; j++) {
                // Write to file
                new File(logPath()).append(System.nanoTime() + " [" + new Date().toTimestamp().toString() + "] [DEBUG] [" + new Random().with {(1..9).collect {(('a'..'z')).join()[ nextInt((('a'..'z')).join().length())]}.join()} + "]\n")
            }
            println("batch " + i + " done. Sleeping for " + secondsToSleep + " seconds")
            sleep(secondsToSleep * 1000)
        }
    }
}

task deleteFileContent(){
    new File(logPath()).text = ''''''
}


mainClassName = 'App'